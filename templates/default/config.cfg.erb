[general]
# DNS interface. Note that systemd-resolved may reserve port 53 on 127.0.0.53
# In this case acme-dns will error out and you will need to define the listening interface
# for example: listen = "127.0.0.1:53"
listen = "0.0.0.0:53"
# protocol, "both", "both4", "both6", "udp", "udp4", "udp6" or "tcp", "tcp4", "tcp6"
protocol = "both"
# domain name to serve the requests off of
domain = "<%= node['osl-acme']['acme-dns']['domain'] %>"
# zone name server
nsname = "<%= node['osl-acme']['acme-dns']['nsname'] %>"
# admin email address, where @ is substituted with .
nsadmin = "<%= node['osl-acme']['acme-dns']['nsadmin'] %>"
# predefined records served in addition to the TXT
records = [
    # default A - test
    "<%= node['osl-acme']['acme-dns']['domain'] %>. A <%= node['osl-acme']['acme-dns']['ns-address'] || node['ipaddress'] %>",
    # A 
    "<%= node['osl-acme']['acme-dns']['nsname'] %>. A <%= node['osl-acme']['acme-dns']['ns-address'] || node['ipaddress'] %>",
    # NS
    "<%= node['osl-acme']['acme-dns']['domain'] %>. NS <%= node['osl-acme']['acme-dns']['nsname'] %>."
]
# debug messages from CORS etc
debug = true

[database]
# Database engine to use, sqlite3 or postgres
engine = "postgres"
# Connection string, filename for sqlite3 and postgres://$username:$password@$host/$db_name for postgres
# Please note that the default Docker image uses path /var/lib/acme-dns/acme-dns.db for sqlite3
connection = "postgres://<%= @pg_user %>:<%= @pg_pass %>@<%= @pg_host %>/<%= @pg_dbname %>?sslmode=disable"

[api]
# listen ip eg. 127.0.0.1
ip = "0.0.0.0"
# disable registration endpoint
disable_registration = false
# listen port, eg. 443 for default HTTPS
port = "80"
# possible values: "letsencrypt", "letsencryptstaging", "cert", "none"
tls = "none"
# only used if tls = "cert"
tls_cert_privkey = "/etc/tls/example.org/privkey.pem"
tls_cert_fullchain = "/etc/tls/example.org/fullchain.pem"
# only used if tls = "letsencrypt"
acme_cache_dir = "api-certs"
# CORS AllowOrigins, wildcards can be used
corsorigins = [
    "*"
]
# use HTTP header to get the client ip
use_header = false
# header name to pull the ip address / list of ip addresses from
header_name = "X-Forwarded-For"

[logconfig]
# logging level: "error", "warning", "info" or "debug"
loglevel = "debug"
# possible values: stdout, TODO file & integrations
logtype = "stdout"
# file path for logfile TODO
# logfile = "./acme-dns.log"
# format, either "json" or "text"
logformat = "text"
